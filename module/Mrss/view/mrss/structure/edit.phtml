<div class="btn-group heading-btns">
    <a class="btn btn-default" href="#" id="addPage">
        <i class="glyphicon glyphicon-plus"></i>
        Add Page
    </a>
    <a class="btn btn-default" href="#" id="addHeading">
        <i class="glyphicon glyphicon-plus"></i>
        Add Heading
    </a>
    <a class="btn btn-default" href="#" id="addBenchmark">
        <i class="glyphicon glyphicon-plus"></i>
        Add Measure
    </a>

</div>

<h1>Edit Structure</h1>

<?php
$this->headLink()->appendStylesheet('/css/jqtree.css?v=1');
$this->headLink()->appendStylesheet('/css/chosen.min.css');
?>

<style>
    #benchmarkSelect #control-group-cancelButton {
        width: 10% !important;
    }

    #controls-cancelButton {
        margin-left: 30px;
    }

    #benchmarkSelect {
        display: none;
    }
    .heading-node {
        font-weight: bold;
        font-size: 110%;
    }
    ul.jqtree-tree .jqtree-title.page-node {
        /*margin-left: 1.2em;*/
    }
    .page-node {
        font-size: 130%;
        font-weight: bold;
    }
    a.remove-node, a.edit-node {
        display: none;
        float: right;
    }
    .jqtree-selected > .jqtree-element > .jqtree-title > a.remove-node {
        display: block;
        margin-right: 3px;
    }

    .jqtree-selected > .jqtree-element > .jqtree-title > a.edit-node {
        display: block;
        margin-right: 3px;
    }

    p.hint {
        font-size: 80%;
    }

    #tree1 {
        font-size: 120%;
    }

    #control-group-submitButton {
        width: 215px !important;
    }

    #controls-heading input {
        width: 400px;
    }
</style>

<?php
$this->headScript()->appendFile(
    '/js/tree.jquery.js?v=1',
    'text/javascript'
);

$this->headScript()->appendFile(
    '/js/chosen.jquery.min.js?v=1',
    'text/javascript'
);
?>


<script>
    <?php $this->headScript()->captureStart() ?>

    var structureId = '<?= $structure->getId() ?>';
    var json = '<?= $structure->getJson() ?>';

    var addType;
    var editing = false;

    var data = jQuery.parseJSON(json);

    $(document).ready(function() {
        $('#tree1').tree({
            data: data,
            dragAndDrop: true,
            autoOpen: true,
            onCanMoveTo: function(moved_node, target_node, position) {
                var canMove = true;

                // Benchmark nodes can't have children
                if (target_node.benchmark) {
                    canMove = false;
                }

                // Pages can only be on the top level
                if (moved_node.url) {
                    /*if (target_node.parent || position == 'inside') {
                        canMove = false;
                        console.log("cannot move to target node. It's not top level");
                    }*/

                }

                return canMove;
            },
            onCreateLi: function(node, $li) {
                // Add 'icon' span before title
                if (node.benchmark) {
                    $li.find('.jqtree-title').addClass('benchmark-node');
                } else if (node.url) {
                    $li.find('.jqtree-title').addClass('page-node');
                    $li.find('.jqtree-title').prepend(node.url + ': ');
                } else {
                    $li.find('.jqtree-title').addClass('heading-node');
                }

                $li.find('.jqtree-title').append('<a class="remove-node"><span class="glyphicon glyphicon-remove"></span></a>')
                $li.find('.jqtree-title').append('<a class="edit-node"><span class="glyphicon glyphicon-edit"></span></a>')
            }
        });




        $('#benchmark').chosen({
            search_contains: true,
            width: '400px'
        });

        setupForm();
        setupAddHeading();
        setupAddBenchmark();
        setupAddSubmitted();
        setupNodeMove();
        setupNodeRemove();
        setupNodeEdit();
        setupAddPage()
    });


    function setupForm() {
        hideForm();
    }

    function hideForm() {

        $('#benchmarkSelect').hide();
    }

    function showForm()
    {
        $('#benchmarkSelect').show();
    }

    function showHeadingForm()
    {
        addType = 'heading';
        $('#control-group-heading').show();
        $('#control-group-url').hide();
        $('#control-group-benchmark').hide();
        showForm();
    }

    function showPageForm()
    {
        addType = 'page';
        $('#control-group-heading').show();
        $('#control-group-url').show();
        $('#control-group-benchmark').hide();
        showForm();
    }

    function showBenchmarkForm()
    {
        addType = 'benchmark';
        $('#control-group-heading').hide();
        $('#control-group-url').hide();
        $('#control-group-benchmark').show();
        showForm();
    }

    function setupAddHeading()
    {
        $('#addHeading').click(function() {
            showHeadingForm();

            return false;
        })
    }

    function setupAddPage()
    {
        $('#addPage').click(function() {
            showPageForm();

            return false;
        })
    }

    function setupAddBenchmark()
    {
        $('#addBenchmark').click(function() {
            showBenchmarkForm();

            return false;
        })
    }

    function setupCancelButton()
    {
        $('#cancelButton').click(function() {
            hideForm();
            editing = false;
            return false;
        })
    }

    function setupAddSubmitted()
    {
        $('#benchmark_select').submit(function() {
            if (editing) {
                if (addType == 'heading') {
                    saveHeading();
                } else if (addType == 'page') {
                    savePage();
                } else if (addType == 'benchmark') {
                    saveBenchmark();
                }
            } else {
                if (addType == 'heading') {
                    addHeading();
                } else if (addType == 'page') {
                    addPage();
                } else if (addType == 'benchmark') {
                    addBenchmark();
                }
            }

            editing = false;

            return false;
        })
    }

    function addClicked()
    {

    }

    function getHeading()
    {
        return {
            name: $('#heading').val()
        }
    }

    function clearForm()
    {
        $('#heading').val('');
        $('#url').val('');

    }

    function addHeading()
    {
        var parent_node = $('#tree1').tree('getSelectedNode');

        $('#tree1').tree(
            'appendNode',
            getHeading(),
            parent_node
        );

        clearForm();
        saveStructure();
        hideForm();
    }

    function getPage()
    {
        var heading = $('#heading').val();
        var url = $('#url').val();

        return {
            name: heading,
            url: url
        }
    }

    function addPage()
    {
        var parent_node = null;

        $('#tree1').tree(
            'appendNode',
            getPage(),
            parent_node
        );

        clearForm();
        saveStructure();
        hideForm();
    }

    function getBenchmark()
    {
        var benchmark_id = $('#benchmark').val();
        var label = $('#benchmark option:selected').text()

        return {
            name: label,
            benchmark: benchmark_id
        }
    }

    function addBenchmark()
    {
        var parent_node = $('#tree1').tree('getSelectedNode');

        $('#tree1').tree(
            'appendNode',
            getBenchmark(),
            parent_node
        );

        clearForm();
        saveStructure();
        hideForm();
    }

    function saveHeading()
    {
        var selected_node = $('#tree1').tree('getSelectedNode');
        var new_node = getHeading();

        $('#tree1').tree(
            'updateNode',
            selected_node,
            new_node
        );

        clearForm();
        saveStructure();
        hideForm();
    }

    function savePage()
    {
        var selected_node = $('#tree1').tree('getSelectedNode');
        var new_node = getPage();

        $('#tree1').tree(
            'updateNode',
            selected_node,
            new_node
        );

        clearForm();
        saveStructure();
        hideForm();
    }

    function saveBenchmark()
    {
        var selected_node = $('#tree1').tree('getSelectedNode');
        var new_node = getBenchmark();

        $('#tree1').tree(
            'updateNode',
            selected_node,
            new_node
        );

        clearForm();
        saveStructure();
        hideForm();
    }

    function setupNodeMove()
    {
        $('#tree1').bind(
            'tree.move',
            function(event) {
                event.preventDefault();
                event.move_info.do_move();
                saveStructure();
            }
        )
    }

    function saveStructure()
    {
        var json = $('#tree1').tree('toJson');
        var data = {
            json: json,
            structureId: structureId
        }

        $.post('/structures/save', data)
    }


    function setupNodeRemove()
    {
        var tree = $('#tree1');
        $('a.remove-node').click(function() {
            console.log('remove')
            // Remove the selected node
            if (confirm('Are you sure you want to remove the selected node and all its children?')) {
                var node = tree.tree('getSelectedNode');
                tree.tree('removeNode', node);
                saveStructure();
            }

            return false;
        })
    }

    function setupNodeEdit()
    {
        var tree = $('#tree1');
        $('a.edit-node').click(function() {
            // Edit the selected node
            var node = tree.tree('getSelectedNode');

            var heading = node.name;
            $('#heading').val(heading);

            var url = node.url;
            $('#url').val(url);

            var benchmark = node.benchmark;
            $('#benchmark').val(benchmark);

            if (node.benchmark) {
                showBenchmarkForm();
            } else if (node.url) {
                showPageForm();
            } else {
                showHeadingForm()
            }

            editing = node;

            showForm();

            return false;
        })
    }


    <?php $this->headScript()->captureEnd() ?>
</script>


<div id="benchmarkSelect">
    <?= $this->ztbForm($benchmarkForm->prepare()) ?>
</div>


<p class="hint">Drag and drop to rearrange the headings and measures. Changes are saved automatically.</p>

<div id="tree1"></div>
