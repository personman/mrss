<?php /** @var \Mrss\Entity\System[] $systems */ ?>

<?php /*
<div style="width: 600px; height: 400px; margin: 0 auto">
<div id="container-speed" style="width: 300px; height: 200px; float: left"></div>
<div id="container-rpm" style="width: 300px; height: 200px; float: left"></div>
</div>
<?php

$this->headScript()->appendFile(
    '/js/highcharts.js?v=5',
    'text/javascript'
);

$this->headScript()->appendFile(
    '/js/highcharts-more.js',
    'text/javascript'
);

$this->headScript()->appendFile(
    '/js/highcharts-solid-gauge.js',
    'text/javascript'
);
?>

<script>
    <?php $this->headScript()->captureStart() ?>
    $(document).ready(function() {



        var gaugeOptions = {

            chart: {
                type: 'solidgauge'
            },

            title: null,

            pane: {
                center: ['50%', '85%'],
                size: '140%',
                startAngle: -90,
                endAngle: 90,
                background: {
                    backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || '#EEE',
                    innerRadius: '60%',
                    outerRadius: '100%',
                    shape: 'arc'
                }
            },

            tooltip: {
                enabled: false
            },

            // the value axis
            yAxis: {
                stops: [
                    [0.1, '#55BF3B'], // green
                    [0.5, '#DDDF0D'], // yellow
                    [0.9, '#DF5353'] // red
                ],
                lineWidth: 0,
                minorTickInterval: null,
                tickAmount: 2,
                title: {
                    y: -70
                },
                labels: {
                    y: 16
                }
            },

            plotOptions: {
                solidgauge: {
                    dataLabels: {
                        y: 5,
                        borderWidth: 0,
                        useHTML: true
                    }
                }
            }
        };

// The speed gauge
        var chartSpeed = Highcharts.chart('container-speed', Highcharts.merge(gaugeOptions, {
            yAxis: {
                min: 0,
                max: 200,
                title: {
                    text: 'Speed'
                }
            },

            credits: {
                enabled: false
            },

            series: [{
                name: 'Speed',
                data: [80],
                dataLabels: {
                    format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                    ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y}</span><br/>' +
                    '<span style="font-size:12px;color:silver">km/h</span></div>'
                },
                tooltip: {
                    valueSuffix: ' km/h'
                }
            }]

        }));

/// The RPM gauge
        var chartRpm = Highcharts.chart('container-rpm', Highcharts.merge(gaugeOptions, {
            yAxis: {
                min: 0,
                max: 5,
                title: {
                    text: 'RPM'
                }
            },

            series: [{
                name: 'RPM',
                data: [1],
                dataLabels: {
                    format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                    ((Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black') + '">{y:.1f}</span><br/>' +
                    '<span style="font-size:12px;color:silver">* 1000 / min</span></div>'
                },
                tooltip: {
                    valueSuffix: ' revolutions/min'
                }
            }]

        }));

// Bring life to the dials
        setInterval(function () {
            // Speed
            var point,
                newVal,
                inc;

            if (chartSpeed) {
                point = chartSpeed.series[0].points[0];
                inc = Math.round((Math.random() - 0.5) * 100);
                newVal = point.y + inc;

                if (newVal < 0 || newVal > 200) {
                    newVal = point.y - inc;
                }

                point.update(newVal);
            }

            // RPM
            if (chartRpm) {
                point = chartRpm.series[0].points[0];
                inc = Math.random() - 0.5;
                newVal = point.y + inc;

                if (newVal < 0 || newVal > 5) {
                    newVal = point.y - inc;
                }

                point.update(newVal);
            }

        }, 2000);






    });
    <?php $this->headScript()->captureEnd() ?>
</script>
 */ ?>







<div class="slider-container">
    <div class="slider-container-overlay">&nbsp;</div>

    <div class="carousel"><img src="http://design.app.benchmark.envisio.com/images/chart.jpg" /></div>
</div>

<?php foreach ($systems as $system): ?>
<div class="network-wrap">
    <h1><?= $system->getName() ?></h1>

    <div class="col-sm-3 network-progress">
        <div class="row">

            <?php $completion =  round($system->getDataEntryStructure()->getCompletionPercentageForObservation($observation)); ?>

            <?php
                $gauge = array(
                    'chart' => array(
                        'type' => 'solidgauge',
                        'backgroundColor' => '#F7F7F7',
                        'height' => 150
                    ),
                    'title' => '',
                    'id' => 'systemCompletion' . $system->getId(),
                    'series' => array(
                        array(
                            'type' => 'solidgauge',
                            'name' => '',
                            'data' => array($completion),
                            'dataLabels' => array(
                                'format' =>  '<div style="text-align:center"><span style="font-size:25px;color: black">{y}%</span><br/>'
                            )
                        )
                    ),
                    'pane' => array(
                        'startAngle' => -90,
                        'endAngle' => 90,
                        'center' => array(
                            '50%',
                            '90%'
                        ),
                        'size' => '180%',
                        'background' => array(
                            'innerRadius' => '60%',
                            'outerRadius' => '100%',
                            'shape' => 'arc'
                        )
                    ),
                    'tooltip' => array(
                        'enabled' => false
                    ),
                    'yAxis' => array(
                        'min' => 0,
                        'max' => 100,
                        'minorTickInterval' => null,
                        'tickAmount' => 2,
                        'labels' => array(
                            'y' => 16
                        ),
                        'stops' => array(
                            array(0.0, '#cc181e'),
                            array(0.4999999, '#cc181e'),
                            array(0.5, '#fbb41e'),
                            array(0.7499999, '#fbb41e'),
                            array(0.75, '#5fa80b'),
                            array(1, '#5fa80b'),
                        )
                    ),
                    'credits' => array(
                        'enabled' => false
                    ),
                    'plotOptions' => array(
                        'solidgauge' => array(
                            'dataLabels' => array(
                                'y' => 20,
                                'borderWidth' => 0
                            )
                        )
                    ),
                    'exporting' => array(
                        'enabled' => false
                    )
                );

                echo $this->chart($gauge);

            ?>

            <span>Data Entry Progress <?= $yearRange ?></span></div>
    </div>

    <div class="col-sm-6 network-dataentry">
        <ul>
    <li><strong>Service Area <?= $yearRange ?></strong></li>

            <?php foreach ($system->getDataEntryStructure()->getPages() as $benchmarkGroup): ?>
                <?php $bgCompletion = round($benchmarkGroup->getCompletionPercentageForObservation($observation)); ?>
                <?php
                $completionColor = '#cc181e'; // Red
                if ($bgCompletion > 75) {
                    $completionColor = '#5fa80b'; // Green
                } else if ($bgCompletion > 50) {
                    $completionColor = '#fbb41e'; // Yellow
                }

                ?>

            <li>
                <a href="/network-switch/<?= $system->getId() . '?redirect=' . urlencode('data-entry/edit') ?>">
                <span class="service-area-type"><?= $benchmarkGroup->getLabel() ?></span>
                <div class="service-area-type-progress"><strong style="color:<?= $completionColor ?>"><?= $bgCompletion ?>%</strong>
                    <div class="data-entry-progress-bar">
                        <div class="data-entry-progress" style="background:<?= $completionColor ?>; width: <?= $bgCompletion ?>%;">&nbsp;</div>
                    </div>
                </div>
                </a>
            </li>
            <?php endforeach ?>
        </ul>
        <a class="data-entry-readmore">Show All [+]</a></div>

    <div class="col-sm-3 network-contributor"><strong class="big-number"><?= count($system->getColleges()) ?> <span>Cities</span></strong>

        <div class="newest-contributors"><strong>Newest Members</strong>

            <ul>
                <?php foreach ($system->getRecentMemberships($year) as $systemMembership): ?>
                <li><?= $systemMembership->getCollege()->getName() ?></li>
                <?php endforeach ?>
            </ul>
        </div>
    </div>

    <div class="clear">&nbsp;</div>
</div>
<?php endforeach ?>


<script>
    $( ".network-wrap .network-dataentry ul" ).each(function( index ) {
        $(this).children('li').each(function( index ) {
            if (index > 5) {
                $(this).css('display', 'none');
            }
        });
    });

    $( ".data-entry-readmore" ).each(function( index ) {
        var showAll = false;
        $(this).click(function(){
            if (showAll == false) {
                $(this).text('Show Less [-]');
                $(this).prev('.network-wrap .network-dataentry ul').children('li').css('display', 'block');
                showAll = true;
            } else {
                $(this).text('Show All [+]');
                $(this).prev('.network-wrap .network-dataentry ul').children('li').each(function( index ) {
                    if (index > 5) {
                        $(this).css('display', 'none');
                    }
                    showAll = false;
                });
            }
        });
    });
</script>

